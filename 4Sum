class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n = nums.size();
        sort(nums.begin(), nums.end());
        vector<vector<int>> ans;
        for(int i = 0; i < n; i++){
            for(int j = i + 1; j < n; j++){
                int front = j + 1;
                int back = n - 1;
                long long int target2 = target*1LL - nums[j]*1LL - nums[i]*1LL;
                while(front < back){
                    long long res = (long long)(nums[front] + nums[back]);
                    if(res > target2)back--;
                    else if(res < target2)front++;
                    else{
                        vector<int> tmp(4,0);
                        tmp[0] = nums[i];
                        tmp[1] = nums[j];
                        tmp[2] = nums[front];
                        tmp[3] = nums[back];
                        ans.push_back(tmp);
                        while(front < back && nums[front] == tmp[2])front++;
                        while(front < back && nums[back] == tmp[3])back--;
                    }
                    
                }
                while(j + 1 < n && nums[j + 1] == nums[j])j++;
            }
            while(i + 1 < n && nums[i + 1] == nums[i])i++;
        }
        return ans;
    }
};
