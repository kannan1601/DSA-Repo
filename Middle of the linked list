/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
    
        ************* FIRST APPROACH **************
        // ListNode *dummy = head;
        // int count = 0;
        // while(dummy != NULL){
        //     count++;
        //     dummy = dummy -> next;
        // }
        // int n = (count) / 2;
        // while(n--){
        //     head = head -> next;
        // }
        // return head;
        
        ************** SECOND APPROACH *************
        ListNode *slow = head, *fast = head;
        while(fast != NULL && fast -> next != NULL){
            slow = slow -> next;
            fast = fast -> next -> next;
        }
        return slow;
    }
};
